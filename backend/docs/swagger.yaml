definitions:
  dto.CreateQuestionRequest:
    properties:
      answer:
        allOf:
        - $ref: '#/definitions/repositories.AnswerOption'
        enum:
        - 1
        - 2
        - 3
        - 4
      option_a:
        type: string
      option_b:
        type: string
      option_c:
        type: string
      option_d:
        type: string
      title:
        type: string
    required:
    - answer
    - option_a
    - option_b
    - option_c
    - option_d
    - title
    type: object
  dto.CreateQuizRequest:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  dto.QuizResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  repositories.AnswerOption:
    enum:
    - 1
    - 2
    - 3
    - 4
    format: int32
    type: integer
    x-enum-varnames:
    - OptionA
    - OptionB
    - OptionC
    - OptionD
  repositories.Question:
    properties:
      answer:
        $ref: '#/definitions/repositories.AnswerOption'
      createdAt:
        type: string
      id:
        type: string
      optionA:
        type: string
      optionB:
        type: string
      optionC:
        type: string
      optionD:
        type: string
      quizID:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  repositories.Quiz:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      questions:
        items:
          $ref: '#/definitions/repositories.Question'
        type: array
      title:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /quiz/{id}:
    get:
      description: Retrieve a single quiz by its ID
      parameters:
      - description: Quiz ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.QuizResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a quiz by ID
      tags:
      - quiz
  /quizzes:
    get:
      description: Retrieve all quizzes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.QuizResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all quizzes
      tags:
      - quizzes
    post:
      consumes:
      - application/json
      description: Create a quiz with title and description
      parameters:
      - description: Quiz info
        in: body
        name: quiz
        required: true
        schema:
          $ref: '#/definitions/dto.CreateQuizRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/repositories.Quiz'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new quiz
      tags:
      - quizzes
  /quizzes/{quiz_id}/questions:
    get:
      description: Retrieve all questions belonging to a specific quiz
      parameters:
      - description: Quiz ID
        in: path
        name: quiz_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repositories.Question'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all questions for a quiz
      tags:
      - questions
    post:
      consumes:
      - application/json
      description: Create a question with four options under a specific quiz
      parameters:
      - description: Quiz ID
        in: path
        name: quiz_id
        required: true
        type: string
      - description: Question info
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/dto.CreateQuestionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/repositories.Question'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new question
      tags:
      - questions
swagger: "2.0"
